#!/bin/sh
#
# This is an OS-agnostic helper to install package(s).
#

set -e # Exit immediately if a command exits with a non-zero status.

usage() {
    echo "usage: $(basename "$0") [--virtual NAME ] PKG [PKG...]" >&2
    exit 1
}

die() {
    echo "ERROR: $*" >&2
    exit 1
}

trap : TERM QUIT INT
trap "cleanup" EXIT

#
# Alpine functions
#

is_pkg_installed_alpine() {
    apk -e info "$1" > /dev/null
}

install_pkg_alpine() {
    VIRTUAL_PKG="$1"
    shift

    if [ "${VIRTUAL_PKG}" -eq 1 ]; then
        set -- "--virtual" "$@"
    fi

    apk --no-cache add "$@"
}

cleanup_alpine() {
    rm -rf /var/cache/misc/*
}

#
# Debian functions
#

is_pkg_installed_debian() {
    dpkg --status "$1" 2>&1 | grep -q "^Status: install ok installed"
}

install_pkg_debian() {
    VIRTUAL_PKG="$1"
    shift

    if [ "${VIRTUAL_PKG}" -eq 1 ]; then
        VIRTUAL_PKG_NAME=$1
        shift

        if [ -f "/var/lib/apt/${VIRTUAL_PKG_NAME}.virtual" ]; then
            die "Virtual package '${VIRTUAL_PKG_NAME}' already exists."
        fi

        echo "$*" > "/var/lib/apt/${VIRTUAL_PKG_NAME}.virtual"
    fi

    if [ -n "$1" ]; then
        apt-get -q update
        apt-get -q install -y --no-install-recommends "$@"
    fi
}

cleanup_debian() {
    apt-get -q clean
    rm -rf /var/lib/apt/lists/* \
        /var/log/dpkg.log \
        /var/log/alternatives.log \
        /var/log/apt/*
}

#
# OS agnostic functions
#

is_pkg_installed() {
    if command -v apk > /dev/null; then
        is_pkg_installed_alpine "$@"
    else
        is_pkg_installed_debian "$@"
    fi
}

install_pkg() {
    if command -v apk > /dev/null; then
        install_pkg_alpine "$@"
    else
        install_pkg_debian "$@"
    fi
}

cleanup() {
    if command -v apk > /dev/null; then
        cleanup_alpine
    else
        cleanup_debian
    fi
}

#
# Main
#

if [ -z "$1" ]; then
    usage
fi

if command -v apk > /dev/null; then
    export DEBIAN_FRONTEND=noninteractive
fi

VIRTUAL_PKG=
if [ "$1" = "--virtual" ]; then
    shift
    if [ -z "$1" ]; then
        echo "Virtual package name missing."
        usage
    fi
    VIRTUAL_PKG="$1"
    shift
fi

if [ -n "${VIRTUAL_PKG}" ]; then
    pkgs="${VIRTUAL_PKG}"
    for pkg in "$@"; do
        if ! is_pkg_installed "${pkg}"; then
            pkgs="${pkgs} ${pkg}"
        fi
    done
    # shellcheck disable=2086
    install_pkg 1 ${pkgs}
else
    install_pkg 0 "$@"
fi

# vim:ft=sh:ts=4:sw=4:et:sts=4
