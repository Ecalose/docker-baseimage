#!/bin/sh
#
# Wrapper for sed with a patch-like behavior.
#
# The wrapper returns:
#   - A success when running the sed expression results in changes applied to
#     to file.
#   - An error when running the sed expression results in no changes applied to
#     the file.
#
# NOTE: sed option '-i' is already supplied by this script.
#

usage() {
    if [ -n "${1:-}" ]; then
        echo "ERROR: $*" >&2
        echo "" >&2
    fi

    echo "usage: $(basename "$0") [SED_OPT...] SED_EXPRESSION FILE

sed with a patch-like behavior.

NOTE: sed option '-i' is already supplied by this script.
" >&2
    exit 1
}

die() {
    echo "ERROR: $*" >&2
    exit 1
}

cleanup() {
    [ ! -f "${fpath}".bak ] || rm -f "${fpath}".bak
}

trap : TERM QUIT INT
trap "cleanup" EXIT

fpath=
eval fpath="\${$#}"

if [ "$#" -lt 2 ]; then
    usage " Not enough arguments."
else
    for arg in "$@"; do
        if [ "${arg}" = "-i" ]; then
            echo "ERROR: The '-i' option should not be specified." >&2
            exit 1
        fi
    done
fi

sed -i.bak "$@"
rc="$?"
if [ "${rc}" -eq 0 ]; then
    diff "${fpath}" "${fpath}".bak > /dev/null 2>&1
    case $? in
        0)
            # Files are the same.
            die "No modification applied to ${fpath}."
            ;;
        1)
            # Files differ, OK.
            exit 0
            ;;
        *) ;;
    esac
fi

# vim:ft=sh:ts=4:sw=4:et:sts=4
